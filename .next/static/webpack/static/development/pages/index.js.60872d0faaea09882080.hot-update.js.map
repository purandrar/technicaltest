{"version":3,"file":"static/webpack/static/development/pages/index.js.60872d0faaea09882080.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/layout'\nimport Link from \"next/link\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap'\n\nconst Index = props => (\n    <Layout>\n        <h1>Headline</h1>\n        <ul>\n            {props.newsUs.map(news => (\n                <li>\n                    <a href={news.url} target=\"_blank\">{news.title}</a>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n);\n\nIndex.getInitialProps = async function () {\n    const res = await fetch('http://newsapi.org/v2/top-headlines?country=id&category=technology&apiKey=72aa24ac8bbf4a1aa302891fbde1d0ac');\n    const data = await res.json();\n    const newsUs = data.articles.slice(0, 8)\n    console.log(`Show data fetched. Count: ${newsUs.length}`);\n\n    return {\n        newsUs\n    };\n};\n\nexport default Index;\n// export default function Index(props) {\n//     return (\n//         <Layout>\n//             <h1>Batman TV Shows</h1>\n//             <ul>\n//                 {props.shows.map(show => (\n//                     <li key={show.id}>\n//                         <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                             <a>{show.name}</a>\n//                         </Link>\n//                     </li>\n//                 ))}\n//             </ul>\n//             {/* <p>Hello Next.js</p> */}\n//         </Layout>\n//     )\n// }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}